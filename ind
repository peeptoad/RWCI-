<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Thrust Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <canvas id="thrustChart" width="400" height="400"></canvas>

    <div>
        <label for="weightInput">Weight (lbs):</label>
        <input type="number" id="weightInput" step="0.5" placeholder="Enter weight">
        
        <label for="timeInput">Time (seconds):</label>
        <input type="number" id="timeInput" step="0.25" placeholder="Enter time">

        <button onclick="addDataPoint()">Add Data Point</button>
        <button onclick="removeLastDataPoint()">Remove Last Data Point</button>
        <button onclick="calculateMetrics()">Calculate Metrics</button>
    </div>

    <div id="metrics">
        <h2>Additional Parameters:</h2>
        <p>Nozzle Throat Diameter: <span id="throatDiameter"></span> inches</p>
        <p>Nozzle Exit Diameter: <span id="exitDiameter"></span> inches</p>
        <p>Throat Area: <span id="throatArea"></span> square inches</p>
        <p>Exit Area: <span id="exitArea"></span> square inches</p>
        <p>Thrust Coefficient: <span id="thrustCoefficient"></span></p>
        <p>Specific Impulse: <span id="specificImpulse"></span> seconds</p>
        <p>Effective Exhaust Velocity: <span id="effectiveExhaustVelocity"></span> m/s</p>

        <h2>Propellant Information:</h2>
        <p>Propellant Mass: <span id="propellantMassGrams"></span> grams</p>

        <h2>Thrust Metrics:</h2>
        <p>Total Impulse: <span id="totalImpulse"></span> Newton-seconds</p>
        <p>Average Thrust: <span id="averageThrust"></span> lbs / <span id="averageThrustNewton"></span> Newtons</p>
        <p>Max Thrust: <span id="maxThrust"></span> lbs</p>
        <p>Time to Max Thrust: <span id="timeToMaxThrust"></span> seconds</p>
        <p>Burnout Time: <span id="burnoutTime"></span> seconds</p>
        <p>Thrust Duration: <span id="thrustDuration"></span> seconds</p>
        <p>Area Under Curve: <span id="areaUnderCurve"></span> Newton-seconds</p>
    </div>

    <script>
        var date = prompt("Enter the date:");
        var propellantType = prompt("Enter the propellant type:");
        var propellantMassGrams = prompt("Enter the propellant mass (grams):");
        var throatDiameter = prompt("Enter the nozzle throat diameter (inches):");
        var exitDiameter = prompt("Enter the nozzle exit diameter (inches):");

        document.getElementById('date').innerText = date;
        document.getElementById('propellantType').innerText = propellantType;
        document.getElementById('throatDiameter').innerText = throatDiameter;
        document.getElementById('exitDiameter').innerText = exitDiameter;
        document.getElementById('propellantMassGrams').innerText = propellantMassGrams;

        var data = {
            labels: [],
            datasets: [{
                label: 'Thrust',
                data: [],
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: false
            }]
        };

        var options = {
            scales: {
                x: {
                    type: 'linear',
                    position: 'bottom'
                },
                y: {
                    type: 'linear',
                    position: 'left'
                }
            }
        };

        var ctx = document.getElementById('thrustChart').getContext('2d');
        var thrustChart = new Chart(ctx, {
            type: 'line',
            data: data,
            options: options
        });

        function addDataPoint() {
            var weightInput = document.getElementById('weightInput').value;
            var timeInput = document.getElementById('timeInput').value;

            if (weightInput && timeInput) {
                data.labels.push(timeInput);
                data.datasets[0].data.push(parseFloat(weightInput));

                thrustChart.update();
            }
        }

        function removeLastDataPoint() {
            if (data.labels.length > 0) {
                data.labels.pop();
                data.datasets[0].data.pop();
                thrustChart.update();
            }
        }

        function calculateMetrics() {
            var throatArea = (Math.PI * Math.pow(throatDiameter / 2, 2)).toFixed(2);
            var exitArea = (exitDiameter ? Math.PI * Math.pow(exitDiameter / 2, 2) : "N/A").toFixed(2);
            var thrustCoefficient = calculateThrustCoefficient(); // You need to implement this function based on your nozzle design
            var specificImpulse = calculateSpecificImpulse(); // You need to implement this function based on your data
            var effectiveExhaustVelocity = specificImpulse * 9.81; // Assuming g₀ = 9.81 m/s²

            // Display calculated values
            document.getElementById('throatArea').innerText = throatArea;
            document.getElementById('exitArea').innerText = exitArea;
            document.getElementById('thrustCoefficient').innerText =
